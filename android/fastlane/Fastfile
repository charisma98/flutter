# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)


lane :playstore do
  gradle(
    task: 'assemble',
    build_type: 'Release'
  )
end

platform :android do

  desc "Sets the version name and code in pubspec.yaml"
  lane :setVersion do
    begin
      old_version_code = google_play_track_version_codes(
        package_name: "de.wger.flutter",
        track: "production",
        json_key: "./fastlane/envfiles/playstore.json",
      )
      puts "old_version_code: " + old_version_code.to_s
      new_version_code = old_version_code.last().to_i + 1
      puts "new_version_code: " + new_version_code.to_s

      new_version_name = get_version_number_from_git_branch(pattern: 'release/#')
      puts new_version_name.to_s

      flutter_set_version(
        path_to_yaml: "../pubspec.yaml",
        version_name: new_version_name.to_s,
        version_code: new_version_code.to_s,
      )
    end
  end


  desc "Upload app to production"
  lane :production do
    begin
      upload_to_play_store(
        track: 'production',
        aab: '../build/app/outputs/bundle/release/app-release.aab',
        skip_upload_metadata: false,
        skip_upload_images: false,
        skip_upload_screenshots: false,
        release_status: "completed", #"draft",
      )
    end
  end


  desc "Upload closed alpha app and update store entry"
  lane :update_alpha do
    begin
      upload_to_play_store(
        track: 'alpha',
        aab: '../build/app/outputs/bundle/release/app-release.aab',
        skip_upload_metadata: true,
        skip_upload_images: true,
        skip_upload_screenshots: true,
        release_status: "completed", #"draft",
      )
    end
  end

end
