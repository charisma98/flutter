// Mocks generated by Mockito 5.0.7 from annotations
// in wger/test/workout_set_form_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;
import 'dart:ui' as _i8;

import 'package:http/src/client.dart' as _i3;
import 'package:http/src/response.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:wger/models/exercises/exercise.dart' as _i4;
import 'package:wger/providers/auth.dart' as _i2;
import 'package:wger/providers/exercises.dart' as _i6;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeAuthProvider extends _i1.Fake implements _i2.AuthProvider {}

class _FakeClient extends _i1.Fake implements _i3.Client {}

class _FakeExercise extends _i1.Fake implements _i4.Exercise {}

class _FakeResponse extends _i1.Fake implements _i5.Response {}

/// A class which mocks [ExercisesProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockExercisesProvider extends _i1.Mock implements _i6.ExercisesProvider {
  MockExercisesProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i4.Exercise> get items => (super.noSuchMethod(Invocation.getter(#items),
      returnValue: <_i4.Exercise>[]) as List<_i4.Exercise>);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i2.AuthProvider get auth => (super.noSuchMethod(Invocation.getter(#auth),
      returnValue: _FakeAuthProvider()) as _i2.AuthProvider);
  @override
  set auth(_i2.AuthProvider? _auth) =>
      super.noSuchMethod(Invocation.setter(#auth, _auth),
          returnValueForMissingStub: null);
  @override
  _i3.Client get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeClient()) as _i3.Client);
  @override
  set client(_i3.Client? _client) =>
      super.noSuchMethod(Invocation.setter(#client, _client),
          returnValueForMissingStub: null);
  @override
  _i4.Exercise findById(int? exerciseId) =>
      (super.noSuchMethod(Invocation.method(#findById, [exerciseId]),
          returnValue: _FakeExercise()) as _i4.Exercise);
  @override
  _i7.Future<void> fetchAndSetCategories() =>
      (super.noSuchMethod(Invocation.method(#fetchAndSetCategories, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> fetchAndSetMuscles() =>
      (super.noSuchMethod(Invocation.method(#fetchAndSetMuscles, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> fetchAndSetEquipment() =>
      (super.noSuchMethod(Invocation.method(#fetchAndSetEquipment, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i7.Future<void>);
  @override
  _i7.Future<_i4.Exercise> fetchAndSetExercise(int? exerciseId) =>
      (super.noSuchMethod(Invocation.method(#fetchAndSetExercise, [exerciseId]),
              returnValue: Future<_i4.Exercise>.value(_FakeExercise()))
          as _i7.Future<_i4.Exercise>);
  @override
  _i7.Future<void> fetchAndSetExercises() =>
      (super.noSuchMethod(Invocation.method(#fetchAndSetExercises, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i7.Future<void>);
  @override
  _i7.Future<List<dynamic>> searchExercise(String? name,
          [String? languageCode = r'en']) =>
      (super.noSuchMethod(
              Invocation.method(#searchExercise, [name, languageCode]),
              returnValue: Future<List<dynamic>>.value(<dynamic>[]))
          as _i7.Future<List<dynamic>>);
  @override
  void addListener(_i8.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i8.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  dynamic makeUrl(String? path,
          {int? id, String? objectMethod, Map<String, dynamic>? query}) =>
      super.noSuchMethod(Invocation.method(#makeUrl, [path],
          {#id: id, #objectMethod: objectMethod, #query: query}));
  @override
  _i7.Future<Map<String, dynamic>> fetch(Uri? uri) => (super.noSuchMethod(
          Invocation.method(#fetch, [uri]),
          returnValue: Future<Map<String, dynamic>>.value(<String, dynamic>{}))
      as _i7.Future<Map<String, dynamic>>);
  @override
  _i7.Future<Map<String, dynamic>> post(Map<String, dynamic>? data, Uri? uri) =>
      (super.noSuchMethod(Invocation.method(#post, [data, uri]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i7.Future<Map<String, dynamic>>);
  @override
  _i7.Future<Map<String, dynamic>> patch(
          Map<String, dynamic>? data, Uri? uri) =>
      (super.noSuchMethod(Invocation.method(#patch, [data, uri]),
              returnValue:
                  Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i7.Future<Map<String, dynamic>>);
  @override
  _i7.Future<_i5.Response> deleteRequest(String? url, int? id) =>
      (super.noSuchMethod(Invocation.method(#deleteRequest, [url, id]),
              returnValue: Future<_i5.Response>.value(_FakeResponse()))
          as _i7.Future<_i5.Response>);
}
