// Mocks generated by Mockito 5.0.10 from annotations
// in wger/test/gallery_screen_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;
import 'dart:ui' as _i9;

import 'package:http/src/client.dart' as _i3;
import 'package:http/src/response.dart' as _i4;
import 'package:image_picker_platform_interface/src/types/picked_file/io.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:wger/models/gallery/image.dart' as _i6;
import 'package:wger/providers/auth.dart' as _i2;
import 'package:wger/providers/gallery.dart' as _i5;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeAuthProvider extends _i1.Fake implements _i2.AuthProvider {}

class _FakeClient extends _i1.Fake implements _i3.Client {}

class _FakeUri extends _i1.Fake implements Uri {
  @override
  String toString() => super.toString();
}

class _FakeResponse extends _i1.Fake implements _i4.Response {}

/// A class which mocks [GalleryProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockGalleryProvider extends _i1.Mock implements _i5.GalleryProvider {
  MockGalleryProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i6.Image> get images =>
      (super.noSuchMethod(Invocation.getter(#images), returnValue: <_i6.Image>[])
          as List<_i6.Image>);
  @override
  set images(List<_i6.Image>? _images) =>
      super.noSuchMethod(Invocation.setter(#images, _images), returnValueForMissingStub: null);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false) as bool);
  @override
  _i2.AuthProvider get auth =>
      (super.noSuchMethod(Invocation.getter(#auth), returnValue: _FakeAuthProvider())
          as _i2.AuthProvider);
  @override
  set auth(_i2.AuthProvider? _auth) =>
      super.noSuchMethod(Invocation.setter(#auth, _auth), returnValueForMissingStub: null);
  @override
  _i3.Client get client =>
      (super.noSuchMethod(Invocation.getter(#client), returnValue: _FakeClient()) as _i3.Client);
  @override
  set client(_i3.Client? _client) =>
      super.noSuchMethod(Invocation.setter(#client, _client), returnValueForMissingStub: null);
  @override
  _i7.Future<void> fetchAndSetGallery() =>
      (super.noSuchMethod(Invocation.method(#fetchAndSetGallery, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> addImage(_i6.Image? image, _i8.PickedFile? imageFile) =>
      (super.noSuchMethod(Invocation.method(#addImage, [image, imageFile]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> editImage(_i6.Image? image, _i8.PickedFile? imageFile) =>
      (super.noSuchMethod(Invocation.method(#editImage, [image, imageFile]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> deleteImage(_i6.Image? image) =>
      (super.noSuchMethod(Invocation.method(#deleteImage, [image]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i7.Future<void>);
  @override
  void addListener(_i9.VoidCallback? listener) => super
      .noSuchMethod(Invocation.method(#addListener, [listener]), returnValueForMissingStub: null);
  @override
  void removeListener(_i9.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() =>
      super.noSuchMethod(Invocation.method(#dispose, []), returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []), returnValueForMissingStub: null);
  @override
  Uri makeUrl(String? path, {int? id, String? objectMethod, Map<String, dynamic>? query}) =>
      (super.noSuchMethod(
          Invocation.method(
              #makeUrl, [path], {#id: id, #objectMethod: objectMethod, #query: query}),
          returnValue: _FakeUri()) as Uri);
  @override
  _i7.Future<Map<String, dynamic>> fetch(Uri? uri) =>
      (super.noSuchMethod(Invocation.method(#fetch, [uri]),
              returnValue: Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i7.Future<Map<String, dynamic>>);
  @override
  _i7.Future<Map<String, dynamic>> post(Map<String, dynamic>? data, Uri? uri) =>
      (super.noSuchMethod(Invocation.method(#post, [data, uri]),
              returnValue: Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i7.Future<Map<String, dynamic>>);
  @override
  _i7.Future<Map<String, dynamic>> patch(Map<String, dynamic>? data, Uri? uri) =>
      (super.noSuchMethod(Invocation.method(#patch, [data, uri]),
              returnValue: Future<Map<String, dynamic>>.value(<String, dynamic>{}))
          as _i7.Future<Map<String, dynamic>>);
  @override
  _i7.Future<_i4.Response> deleteRequest(String? url, int? id) =>
      (super.noSuchMethod(Invocation.method(#deleteRequest, [url, id]),
          returnValue: Future<_i4.Response>.value(_FakeResponse())) as _i7.Future<_i4.Response>);
}
